stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2

# Python Test inside Docker container
test_python:
  stage: test
  tags:
    - runner1
  script:
    - docker run --rm -v $CI_PROJECT_DIR/Python:/app -w /app python:3.9-slim sh -c "pip install -r requirements.txt && python test_app.py"

# Rust Test inside Docker container
test_rust:
  stage: test
  tags:
    - runner1
  script:
    - docker run --rm -v $CI_PROJECT_DIR/Rust:/app -w /app rust:1.88 sh -c "cargo test"

# Build Python Docker Image (runs on host docker)
build_python:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_python_app ./Python

# Build Rust Docker Image
build_rust:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_rust_app ./Rust

# Deploy using docker-compose (assumes docker-compose.yml exists)
deploy:
  stage: deploy
  tags:
    - runner1
  script:
    - docker-compose up -d
