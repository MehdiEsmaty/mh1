stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2

# -------------------------
# Unit Test - Python Flask
# -------------------------
test_python:
  stage: test
  tags:
    - runner1
  script:
    - docker run --rm -u $(id -u):$(id -g) -v $CI_PROJECT_DIR/Python:/app -w /app python:3.9-slim sh -c "pip install -r requirements.txt && python test_app.py"
    - rm -rf Python/__pycache__ || true

# -------------------------
# Unit Test - Rust Actix
# -------------------------
test_rust:
  stage: test
  tags:
    - runner1
  script:
    - export PATH="$HOME/.cargo/bin:$PATH"
    - cd Rust
    - cargo test

# -------------------------
# Build Docker Image - Flask
# -------------------------
build_python:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_python_app ./Python

# -------------------------
# Build Docker Image - Rust
# -------------------------
build_rust:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_rust_app ./Rust

# -------------------------
# Deploy using docker-compose
# -------------------------
deploy:
  stage: deploy
  tags:
    - runner1
  script:
    - docker-compose up -d
