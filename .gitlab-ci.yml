stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2

# -------------------------
# Test: Python Flask
# -------------------------
test_python:
  stage: test
  tags:
    - runner1
  script:
    # حذف cache قدیمی برای جلوگیری از خطای دسترسی
    - rm -rf Python/__pycache__ || true

    # اجرای تست داخل کانتینر با UID کاربر جاری
    - docker run --rm -u $(id -u):$(id -g) \
        -v $CI_PROJECT_DIR/Python:/app \
        -w /app python:3.9-slim \
        sh -c "pip install -r requirements.txt && python test_app.py"

# -------------------------
# Test: Rust Actix
# -------------------------
test_rust:
  stage: test
  tags:
    - runner1
  script:
    # اضافه کردن cargo به PATH
    - export PATH="$HOME/.cargo/bin:$PATH"

    # اجرای تست Rust
    - cd Rust
    - cargo test

# -------------------------
# Build: Python Image
# -------------------------
build_python:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_python_app ./Python

# -------------------------
# Build: Rust Image
# -------------------------
build_rust:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_rust_app ./Rust

# -------------------------
# Deploy: Compose Up
# -------------------------
deploy:
  stage: deploy
  tags:
    - runner1
  script:
    - docker-compose up -d
