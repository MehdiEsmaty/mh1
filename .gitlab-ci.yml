stages:
  - test
  - build
  - deploy

variables:
  CI_PYTHON_IMAGE: python:3.9-slim
  CI_RUST_IMAGE: rust:1.88
  DOCKER_DRIVER: overlay2

# -------------------------
# Test: Python Flask
# -------------------------
test_python:
  stage: test
  tags:
    - runner1
  script:
    - rm -rf Python/__pycache__ || true
    - docker run --rm \
        -v "$CI_PROJECT_DIR/Python":/app \
        -w /app \
        $CI_PYTHON_IMAGE \
        sh -c "pip install --no-cache-dir --prefix=/tmp/pip-temp -r requirements.txt && \
               PYTHONPATH=/tmp/pip-temp/lib/python3.9/site-packages python test_app.py"

# -------------------------
# Test: Rust Actix
# -------------------------
test_rust:
  stage: test
  tags:
    - runner1
  script:
    # پاک کردن پوشه target قدیمی (با اجازه نادیده گرفتن خطا)
    - rm -rf Rust/target || true

    # اجرای تست داخل کانتینر با UID کاربر جاری تا فایل‌های incremental متعلق به gitlab-runner باشد
    - docker run --rm \
        -u $(id -u):$(id -g) \
        -v "$CI_PROJECT_DIR/Rust":/app \
        -w /app \
        $CI_RUST_IMAGE \
        sh -c "cargo test"

# -------------------------
# Build: Python Image
# -------------------------
build_python:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_python_app ./Python

# -------------------------
# Build: Rust Image
# -------------------------
build_rust:
  stage: build
  tags:
    - runner1
  script:
    - docker build -t microservices_rust_app ./Rust

# -------------------------
# Deploy: Docker Compose
# -------------------------
deploy:
  stage: deploy
  tags:
    - runner1
  script:
    - docker-compose up -d
